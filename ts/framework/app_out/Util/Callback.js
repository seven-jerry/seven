var seven;
(function (seven) {
    class Callback {
        constructor(thisRef, method) {
            this.thisRef = thisRef;
            this.method = method;
        }
        call(t, u, v) {
            if (t != undefined && u != undefined && v != undefined) {
                this.method.call(this.thisRef, t, u, v);
                return;
            }
            if (t != undefined && u != undefined) {
                this.method.call(this.thisRef, t, u);
                return;
            }
            if (t != undefined) {
                this.method.call(this.thisRef, t);
                return;
            }
        }
    }
    seven.Callback = Callback;
    class VoidCallback {
        constructor(thisRef, method) {
            this.thisRef = thisRef;
            this.method = method;
        }
        getClassName() { return seven.VoidCallback.classname; }
        call() {
            this.method.call(this.thisRef);
        }
    }
    //AutoGeneratedClassName-start - do not eidt this line
    VoidCallback.classname = "seven.VoidCallback";
    seven.VoidCallback = VoidCallback;
})(seven || (seven = {}));
